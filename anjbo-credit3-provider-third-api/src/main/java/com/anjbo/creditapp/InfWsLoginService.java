
package com.anjbo.creditapp;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.springframework.util.ResourceUtils;

import com.anjbo.ws.InfWsProcessService;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "InfWsLoginService", targetNamespace = "http://ws.inf.creditapp.app/", wsdlLocation = "http://183.238.238.164:9000/cms/services/loginService?wsdl")
public class InfWsLoginService extends Service {

	private final static URL INFWSLOGINSERVICE_WSDL_LOCATION;
	private final static WebServiceException INFWSLOGINSERVICE_EXCEPTION;
	private final static QName INFWSLOGINSERVICE_QNAME = new QName("http://ws.inf.creditapp.app/", "InfWsLoginService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = InfWsLoginService.class.getResource("/sgtws/stglogin.wsdl");
			if (url == null) {
				url = ResourceUtils.getURL(ResourceUtils.CLASSPATH_URL_PREFIX + "/sgtws/stglogin.wsdl");
			}
			System.out.println("url=======" + url);
		} catch (Exception ex) {
			e = new WebServiceException(ex);
		}
		INFWSLOGINSERVICE_WSDL_LOCATION = url;
		INFWSLOGINSERVICE_EXCEPTION = e;
	}

	public InfWsLoginService() {
		super(__getWsdlLocation(), INFWSLOGINSERVICE_QNAME);
	}

	public InfWsLoginService(WebServiceFeature... features) {
		super(__getWsdlLocation(), INFWSLOGINSERVICE_QNAME, features);
	}

	public InfWsLoginService(URL wsdlLocation) {
		super(wsdlLocation, INFWSLOGINSERVICE_QNAME);
	}

	public InfWsLoginService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, INFWSLOGINSERVICE_QNAME, features);
	}

	public InfWsLoginService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public InfWsLoginService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns InfWsLogin
	 */
	@WebEndpoint(name = "InfWsLoginPort")
	public InfWsLogin getInfWsLoginPort() {
		return super.getPort(new QName("http://ws.inf.creditapp.app/", "InfWsLoginPort"), InfWsLogin.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on
	 *            the proxy. Supported features not in the <code>features</code>
	 *            parameter will have their default values.
	 * @return returns InfWsLogin
	 */
	@WebEndpoint(name = "InfWsLoginPort")
	public InfWsLogin getInfWsLoginPort(WebServiceFeature... features) {
		return super.getPort(new QName("http://ws.inf.creditapp.app/", "InfWsLoginPort"), InfWsLogin.class, features);
	}

	private static URL __getWsdlLocation() {
		if (INFWSLOGINSERVICE_EXCEPTION != null) {
			throw INFWSLOGINSERVICE_EXCEPTION;
		}
		return INFWSLOGINSERVICE_WSDL_LOCATION;
	}

}
