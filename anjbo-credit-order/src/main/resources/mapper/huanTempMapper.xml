<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.anjbo.dao.huanTempMapper" >
	<select id="findByAll" resultType="java.util.Map">
	    select * from tbl_huaan_temp
	</select>
	<select id="findByAllHuarong" resultType="java.util.Map">
		select * from tbl_huarong_temp
	</select>
	<select id="findByLending" resultType="LendingDto" parameterType="java.lang.String">
	    SELECT *,DATE_FORMAT(lendingTime,'%Y-%m-%d %H:%i:%s') as lendingTimeStr from `anjbo-server-finance`.tbl_finance_lending where orderNo=#{0}
	</select>
	<update id="updOrderList" parameterType="java.util.Map">
	     update tbl_order_list_base set planPaymentTime=#{planPaymentTime} where orderNo=#{orderNo}
	</update>
	<update id="updFinanceLending" parameterType="java.util.Map">
	   update `anjbo-server-finance`.tbl_finance_lending  set customerPaymentTime=#{planPaymentTime} where orderNo=#{orderNo}
	</update>
	<update id="updFinanceReceivable"  parameterType="java.util.Map">
	   update `anjbo-server-finance`.tbl_finance_receivable_for  set payMentAmountDate=#{payMentAmountDate} where orderNo=#{orderNo}
	   order by createTime desc limit 1; 
	</update>
	<select id="finyByReturn" parameterType="java.lang.String" resultType="DocumentsReturnDto">
	   select *  from `anjbo-server-element`.tbl_element_documents_return where orderNo=#{0}
	</select>
	<update id="updateReturn" parameterType="java.util.Map">
	   update `anjbo-server-element`.tbl_element_documents_return set returnTime=#{returnTime} where orderNo=#{orderNo}
	</update>
	<select id="findByPay" parameterType="java.lang.String" resultType="ReceivablePayDto">
	 	select * from `anjbo-server-finance`.tbl_finance_receivable_pay where orderNo=#{0} 
	</select>
	<update id="updatePay" parameterType="java.util.Map">
		 update `anjbo-server-finance`.tbl_finance_receivable_pay  set payTime=#{payTime} where orderNo=#{orderNo}
	</update>
	<select id="findByRebate" parameterType="java.lang.String" resultType="RebateDto">
		select * from `anjbo-server-finance`.tbl_finance_rebate where orderNo=#{0}
	</select>
	<update id="updateRebate" parameterType="java.util.Map">
		 update `anjbo-server-finance`.tbl_finance_rebate  set rebateTime=#{rebateTime} where orderNo=#{orderNo}
	</update>
	<select id="findByFlow" parameterType="java.util.Map" resultType="OrderFlowDto">
	   select * from `anjbo-server-order`.tbl_order_flow where orderNo=#{orderNo}
	   <if test="currentProcessId!=null and currentProcessId !=''">
	    and currentProcessId=#{currentProcessId}
	   </if>
	   <if test="currentProcessId ==null or currentProcessId==''">
	  	 and (currentProcessId='receivableFor' OR currentProcessId = 'receivableForEnd' )
	   </if>
	   order by createTime desc limit 1; 
	</select>
	<update id="updateOrderFlow" parameterType="java.util.Map">
	     update `anjbo-server-order`.tbl_order_flow set handleTime=#{handleTime} where  orderNo=#{orderNo} and currentProcessId=#{currentProcessId}
	</update>
	
	<select id="selectOrderNoAll" resultType="java.lang.String">
		select orderNo from `anjbo-server-uaa`.tbl_order_list_base;
	</select>
	<select id="selectOrderFlow" resultType="OrderFlowDto" parameterType="java.lang.String">
		select id,orderNo,createTime,currentProcessId,nextProcessId,handleTime from `anjbo-server-uaa`.tbl_order_flow where orderNo=#{0} order by createTime asc
	</select>
	<update id="updateFlow" parameterType="java.util.Map">
	  update `anjbo-server-uaa`.tbl_order_flow set timeNum=#{timeNum} where id=#{id}
	</update>
	<select id="selectOrderNoAlls" resultType="java.lang.String" parameterType="java.lang.String">
		select orderNo from `anjbo-server-uaa`.tbl_order_list_base where cityName=#{0};
	</select>
	<select id="numTimeCount" resultType="java.lang.String" parameterType="java.util.Map">
	    SELECT AVG(timeNum) from `anjbo-server-uaa`.tbl_order_flow f 
	    LEFT JOIN  `anjbo-server-uaa`.tbl_order_list_base b on b.orderNo=f.orderNo 
	    WHERE b.cityName=#{cityName} and f.currentProcessId=#{currentProcessId}
	</select>
	<select id="findByBack" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(1) FROM  `anjbo-server-uaa`.tbl_order_flow a WHERE 
	    (a.backReason != '' or a.backReason != null) AND a.orderNo in ( select c.orderNo FROM `anjbo-server-uaa`.tbl_order_list_base c where c.cityName = #{0});
	</select>
	<select id="fingByBackList" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT b.cityName,b.productName,b.customerName,a.createTime,a.backReason,u.`name`,b.acceptMemberName,b.branchCompany FROM `anjbo-server-uaa`.tbl_order_flow a 
		LEFT JOIN `anjbo-server-uaa`.tbl_order_list_base b on b.orderNo=a.orderNo
		LEFT JOIN `anjbo-server-uaa`.tbl_user_base1 u on u.uid=a.createUid
		WHERE  (a.backReason != '' or a.backReason != null) and b.cityName =  #{0};
	</select>
	
	
	<select id="selectOrderNoAll2" resultType="java.lang.String">
		select orderNo from `anjbo-server-order`.tbl_order_list_base;
	</select>
	<select id="selectOrderFlow2" resultType="OrderFlowDto" parameterType="java.lang.String">
		select id,orderNo,createTime,currentProcessId,nextProcessId,handleTime from `anjbo-server-order`.tbl_order_flow where orderNo=#{0} order by createTime asc
	</select>
	<update id="updateFlow2" parameterType="java.util.Map">
	  update `anjbo-server-order`.tbl_order_flow set timeNum=#{timeNum} where id=#{id}
	</update>
	
	<select id="findByOrderNo" parameterType="java.lang.String" resultType="ReceivableForDto">
	   select * from `anjbo-server-finance`.tbl_finance_receivable_for where orderNo=#{0} order by createTime desc limit 1
	</select>
	<insert id="addFlow" parameterType="OrderFlowDto">
	INSERT INTO `anjbo-server-order`.`tbl_order_flow` 
	(
	 `createUid`, `createTime`, `updateUid`, `orderNo`, `currentProcessId`, `nextProcessId`, `handleUid`, `handleTime`,`backReason`, `returnType`, `isNewWalkProcess`, `timeNum`
	) VALUES (
	 #{createUid}, #{createTime}, #{updateUid}, #{orderNo}, #{currentProcessId}, #{nextProcessId}, #{handleUid}, #{handleTime},NULL, NULL, '1', null
	);
	</insert>
	<delete id="deleteFlow" parameterType="OrderFlowDto">
	    delete  from `anjbo-server-order`.`tbl_order_flow`  where orderNo=#{orderNo} and currentProcessId=#{currentProcessId} and nextProcessId=#{nextProcessId}
	</delete>
</mapper>